---
- name: Prepare System
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"

    - name: Packages
      block:
        - name: Packages | Set base package list
          ansible.builtin.set_fact:
            base_packages:
              - apt-transport-https
              - ca-certificates
              - conntrack
              - curl
              - dirmngr
              - gdisk
              - gnupg
              - hdparm
              - htop
              - iptables
              - iputils-ping
              - ipvsadm
              - libseccomp2
              - lm-sensors
              - net-tools
              - nfs-common
              - nvme-cli
              - open-iscsi
              - parted
              - psmisc
              - python3
              - python3-apt
              - python3-kubernetes
              - python3-yaml
              - smartmontools
              - socat
              - unzip
              - util-linux

        - name: Packages | Add version-specific packages (Bookworm)
          ansible.builtin.set_fact:
            version_packages: "{{ base_packages + ['neofetch', 'software-properties-common'] }}"
          when: ansible_distribution_major_version == '12'

        - name: Packages | Add version-specific packages (Trixie)
          ansible.builtin.set_fact:
            version_packages: "{{ base_packages + ['fastfetch'] }}"
          when: ansible_distribution_major_version == '13'

        - name: Packages | Install all packages
          ansible.builtin.apt:
            name: "{{ version_packages }}"
            install_recommends: false
    - name: Load nvme-tcp module
      ansible.builtin.shell:
        cmd: modprobe nvme-tcp
      ignore_errors: true

      # append to /etc/modules if not present
    - name: Append NVMe module to /etc/modules
      ansible.builtin.lineinfile:
        dest: /etc/modules
        regexp: nvme
        line: nvme-tcp
        create: false
      ignore_errors: true

      # echo "vm.nr_hugepages=1024" | sudo tee -a /etc/sysctl.conf
    - name: Set nr_hugepages
      ansible.builtin.lineinfile:
        dest: /etc/sysctl.conf
        regexp: vm.nr_hugepages
        line: vm.nr_hugepages=1024
        create: true
      ignore_errors: true

      # sysctl -p
    - name: Apply sysctl
      ansible.builtin.shell:
        cmd: sysctl -p
      ignore_errors: true


    - name: User Configuration
      block:
        - name: User Configuration | SSH keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "https://github.com/{{ github_username }}.keys"
        - name: User Configuration | Silence login
          ansible.builtin.file:
            dest: "{{ '/home/' + ansible_user if ansible_user != 'root' else '/root' }}/.hushlogin"
            state: touch
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"
            modification_time: preserve
            access_time: preserve

    - name: Network Configuration
      notify: Reboot
      block:
        - name: Network Configuration | Set hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Network Configuration | Update hosts
          ansible.builtin.copy:
            content: |
              127.0.0.1 localhost
              127.0.1.1 {{ inventory_hostname }}
              # The following lines are desirable for IPv6 capable hosts
              ::1     localhost ip6-localhost ip6-loopback
              ff02::1 ip6-allnodes
              ff02::2 ip6-allrouters
            dest: /etc/hosts
            mode: preserve
        # https://github.com/cilium/cilium/issues/18706
        - name: Network Configuration | Cilium (1)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutingPolicyRules
            line: ManageForeignRoutingPolicyRules=no
        - name: Network Configuration | Cilium (2)
          ansible.builtin.lineinfile:
            dest: /etc/systemd/networkd.conf
            regexp: ManageForeignRoutes
            line: ManageForeignRoutes=no

    - name: System Configuration
      notify: Reboot
      block:
        - name: System Configuration | System info display (Bookworm)
          ansible.builtin.copy:
            dest: /etc/profile.d/neofetch.sh
            mode: "0755"
            content: neofetch --config none
          when: ansible_distribution_major_version == '12'

        - name: System Configuration | System info display (Trixie)
          ansible.builtin.copy:
            dest: /etc/profile.d/neofetch.sh
            mode: "0755"
            content: fastfetch --config none
          when: ansible_distribution_major_version == '13'
        - name: System Configuration | Disable apparmor
          ansible.builtin.systemd:
            name: apparmor
            state: stopped
            masked: true
        - name: System Configuration | Disable swap
          ansible.posix.mount:
            name: "{{ item }}"
            fstype: swap
            state: absent
          loop: ["none", "swap"]
        - name: System Configuration | Kernel modules (1)
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Kernel modules (2)
          ansible.builtin.copy:
            dest: "/etc/modules-load.d/{{ item }}.conf"
            mode: "0644"
            content: "{{ item }}"
          loop: ["br_netfilter", "ceph", "ip_vs", "ip_vs_rr", "nbd", "overlay", "rbd"]
        - name: System Configuration | Sysctl
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              fs.inotify.max_queued_events: 65536
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 8192

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
        reboot_timeout: 3600
